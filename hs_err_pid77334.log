#
# A fatal error has been detected by the Java Runtime Environment:
#
#  SIGSEGV (0xb) at pc=0x00007f467f3f8a6d, pid=77334, tid=0x00007f45501fc700
#
# JRE version: OpenJDK Runtime Environment (8.0_292-b10) (build 1.8.0_292-8u292-b10-0ubuntu1~18.04-b10)
# Java VM: OpenJDK 64-Bit Server VM (25.292-b10 mixed mode linux-amd64 compressed oops)
# Problematic frame:
# C  [libc.so.6+0x97a6d]  cfree+0x3d
#
# Failed to write core dump. Core dumps have been disabled. To enable core dumping, try "ulimit -c unlimited" before starting Java again
#
# If you would like to submit a bug report, please visit:
#   http://bugreport.java.com/bugreport/crash.jsp
# The crash happened outside the Java Virtual Machine in native code.
# See problematic frame for where to report the bug.
#

---------------  T H R E A D  ---------------

Current thread (0x00007f44b9dd3800):  JavaThread "pool-2-thread-1" [_thread_in_native, id=77429, stack(0x00007f45500fc000,0x00007f45501fd000)]

siginfo: si_signo: 11 (SIGSEGV), si_code: 1 (SEGV_MAPERR), si_addr: 0x000000000000001d

Registers:
RAX=0x0000000000000000, RBX=0x0000000000000000, RCX=0x00007f44b0004448, RDX=0x0000000000000018
RSP=0x00007f45501fb180, RBP=0x00007f45501fb250, RSI=0x00007f44bc005340, RDI=0x0000000000000025
R8 =0x00007f44b0004448, R9 =0x00000028cd949c70, R10=0x000000009e377a38, R11=0x2855c22f2369d3ae
R12=0x0000000000000025, R13=0x00007f44b0004428, R14=0x00007f44bc005358, R15=0x0000000000000003
RIP=0x00007f467f3f8a6d, EFLAGS=0x0000000000010202, CSGSFS=0x0000000000000033, ERR=0x0000000000000004
  TRAPNO=0x000000000000000e

Top of Stack: (sp=0x00007f45501fb180)
0x00007f45501fb180:   00007f45501fb2c0 00007f454789212d
0x00007f45501fb190:   0000000000000018 00007f4547b0a16b
0x00007f45501fb1a0:   00000000501fb1e0 24e16804bd28cb00
0x00007f45501fb1b0:   00007f44c2480aa0 0000000000000000
0x00007f45501fb1c0:   00007f45501fb250 00007f44b0004428
0x00007f45501fb1d0:   00007f44b0004428 00007f44bc005358
0x00007f45501fb1e0:   0000000000000003 00007f4547862356
0x00007f45501fb1f0:   00007f44c2480a58 0000000000000018
0x00007f45501fb200:   0000000000000000 0000000000000018
0x00007f45501fb210:   00007f44b0004428 00007f4679de2830
0x00007f45501fb220:   00007f44ebe0e0e0 0000000000000000
0x00007f45501fb230:   00007f44c2480a58 00007f44ebe0e0e0
0x00007f45501fb240:   00007f44c2480a58 1fffffffffffffff
0x00007f45501fb250:   00007f45501fb2c0 00007f4547890154
0x00007f45501fb260:   00007f4679de27a8 00007f45501fb270
0x00007f45501fb270:   00007f44bc005160 00007f44bc005178
0x00007f45501fb280:   00007f44bc005178 24e16804bd28cb00
0x00007f45501fb290:   00007f44c24793d0 00007f44ebe0e0e0
0x00007f45501fb2a0:   0000000000000000 00007f44ebe0e0e0
0x00007f45501fb2b0:   00007f45501fb480 00007f44b9dd3800
0x00007f45501fb2c0:   00007f45501fb2e0 00007f45a810aa8f
0x00007f45501fb2d0:   00007f44c2480aa0 00007f44c24793d0
0x00007f45501fb2e0:   00007f45501fb3d0 00007f45a810a3a9
0x00007f45501fb2f0:   00007f45501fb468 00007f4679dc17b0
0x00007f45501fb300:   00007f45501fb480 00007f44b9dd3a50
0x00007f45501fb310:   0000000000000000 24e16804bd28cb00
0x00007f45501fb320:   00007f45501fb450 00007f44c24793d0
0x00007f45501fb330:   00007f44b9dd3800 00007f44b995f3e0
0x00007f45501fb340:   00007f44ebe0e0e0 00007f44b9dd3800
0x00007f45501fb350:   00007f45501fb3c0 00007f467e368558
0x00007f45501fb360:   00007f44b9dd3800 00007f44b9dd3800
0x00007f45501fb370:   00007f45501fb3c0 00007f44b9dd3800 

Instructions: (pc=0x00007f467f3f8a6d)
0x00007f467f3f8a4d:   24 28 31 c0 48 8b 05 98 34 35 00 48 8b 00 48 85
0x00007f467f3f8a5d:   c0 0f 85 ac 02 00 00 48 85 ff 0f 84 23 01 00 00
0x00007f467f3f8a6d:   48 8b 77 f8 4c 8d 6f f0 40 f6 c6 02 0f 85 39 01
0x00007f467f3f8a7d:   00 00 48 8b 2d f2 32 35 00 64 48 83 7d 00 00 0f 

Register to memory mapping:

RAX=0x0000000000000000 is an unknown value
RBX=0x0000000000000000 is an unknown value
RCX=0x00007f44b0004448 is an unknown value
RDX=0x0000000000000018 is an unknown value
RSP=0x00007f45501fb180 is pointing into the stack for thread: 0x00007f44b9dd3800
RBP=0x00007f45501fb250 is pointing into the stack for thread: 0x00007f44b9dd3800
RSI=0x00007f44bc005340 is an unknown value
RDI=0x0000000000000025 is an unknown value
R8 =0x00007f44b0004448 is an unknown value
R9 =0x00000028cd949c70 is an unknown value
R10=
[error occurred during error reporting (printing register info), id 0xb]

Stack: [0x00007f45500fc000,0x00007f45501fd000],  sp=0x00007f45501fb180,  free space=1020k
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
C  [libc.so.6+0x97a6d]  cfree+0x3d
C  [libpaddle_inference.so+0x1076154]  paddle::ZeroCopyTensor::SetLoD(std::vector<std::vector<unsigned long, std::allocator<unsigned long> >, std::allocator<std::vector<unsigned long, std::allocator<unsigned long> > > > const&)+0x154
C  [0.13.0-SNAPSHOT-cpu-libdjl_paddle.so+0x1ea8f]  utils::GetZTensorFromTensor(paddle::ZeroCopyTensor*, paddle::PaddleTensor*)+0x3e
C  [0.13.0-SNAPSHOT-cpu-libdjl_paddle.so+0x1e3a9]  Java_ai_djl_paddlepaddle_jni_PaddleLibrary_runInference+0xe1
j  ai.djl.paddlepaddle.jni.PaddleLibrary.runInference(J[J)[J+0
j  ai.djl.paddlepaddle.jni.JniUtils.predictorForward(Lai/djl/paddlepaddle/engine/PaddlePredictor;[Lai/djl/paddlepaddle/engine/PpNDArray;[Ljava/lang/String;)[Lai/djl/paddlepaddle/engine/PpNDArray;+63
j  ai.djl.paddlepaddle.engine.PpSymbolBlock.forwardInternal(Lai/djl/training/ParameterStore;Lai/djl/ndarray/NDList;ZLai/djl/util/PairList;)Lai/djl/ndarray/NDList;+109
j  ai.djl.nn.AbstractBlock.forward(Lai/djl/training/ParameterStore;Lai/djl/ndarray/NDList;ZLai/djl/util/PairList;)Lai/djl/ndarray/NDList;+36
j  ai.djl.nn.Block.forward(Lai/djl/training/ParameterStore;Lai/djl/ndarray/NDList;Z)Lai/djl/ndarray/NDList;+5
j  ai.djl.inference.Predictor.predict(Lai/djl/ndarray/NDList;)Lai/djl/ndarray/NDList;+21
j  ai.djl.inference.Predictor.batchPredict(Ljava/util/List;)Ljava/util/List;+140
j  ai.djl.inference.Predictor.predict(Ljava/lang/Object;)Ljava/lang/Object;+5
j  Main$InferRunnable.run()V+22
j  java.util.concurrent.ThreadPoolExecutor.runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V+95
j  java.util.concurrent.ThreadPoolExecutor$Worker.run()V+5
j  java.lang.Thread.run()V+11
v  ~StubRoutines::call_stub
V  [libjvm.so+0x6b04aa]
V  [libjvm.so+0x6ada8b]
V  [libjvm.so+0x6ae077]